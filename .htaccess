# ----------------------------------------------------------------------
# Better website experience for IE users
# ----------------------------------------------------------------------

# Force the latest IE version, in various cases when it may fall back to IE7 mode
#  github.com/rails/rails/commit/123eb25#commitcomment-118920
# Use ChromeFrame if it's installed for a better experience for the poor IE folk

<IfModule mod_setenvif.c>
  <IfModule mod_headers.c>
    BrowserMatch MSIE ie
    Header set X-UA-Compatible "IE=Edge,chrome=1" env=ie
  </IfModule>
</IfModule>

<IfModule mod_headers.c>
# Because X-UA-Compatible isn't sent to non-IE (to save header bytes),
#   We need to inform proxies that content changes based on UA
  Header append Vary User-Agent
# Cache control is set only if mod_headers is enabled, so that's unncessary to declare
</IfModule>


# ----------------------------------------------------------------------
# Cross-domain AJAX requests
# ----------------------------------------------------------------------

# Serve cross-domain ajax requests, disabled.
# enable-cors.org
# code.google.com/p/html5security/wiki/CrossOriginRequestSecurity

#  <IfModule mod_headers.c>
#    Header set Access-Control-Allow-Origin "*"
#  </IfModule>



# ----------------------------------------------------------------------
# Webfont access
# ----------------------------------------------------------------------

# allow access from all domains for webfonts
# alternatively you could only whitelist
#   your subdomains like "sub.domain.com"

<FilesMatch "\.(ttf|otf|eot|woff|font.css)$">
  <IfModule mod_headers.c>
    Header set Access-Control-Allow-Origin "*"
  </IfModule>
</FilesMatch>



# ----------------------------------------------------------------------
# Proper MIME type for all files
# ----------------------------------------------------------------------

# audio
AddType audio/ogg                      oga ogg

# video
AddType video/ogg                      ogv
AddType video/mp4                      mp4
AddType video/webm                     webm

# Proper svg serving. Required for svg webfonts on iPad
#   twitter.com/FontSquirrel/status/14855840545
AddType     image/svg+xml              svg svgz
AddEncoding gzip                       svgz

# webfonts
AddType application/vnd.ms-fontobject  eot
AddType font/truetype                  ttf
AddType font/opentype                  otf
AddType application/x-font-woff        woff

# assorted types
AddType image/x-icon                   ico
AddType image/webp                     webp
AddType text/cache-manifest            appcache manifest
AddType text/x-component               htc
AddType application/x-chrome-extension crx
AddType application/x-xpinstall        xpi
AddType application/octet-stream       safariextz
AddType text/x-vcard       			       vcf




# ----------------------------------------------------------------------
# gzip compression
# ----------------------------------------------------------------------

<IfModule mod_deflate.c>


# force deflate for mangled headers developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/
<IfModule mod_setenvif.c>
  <IfModule mod_headers.c>
    SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s,?\s(gzip|deflate)?|X{4,13}|~{4,13}|-{4,13})$ HAVE_Accept-Encoding
    RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
  </IfModule>
</IfModule>

# html, txt, css, js, json, xml, htc:
<IfModule filter_module>
  FilterDeclare   COMPRESS
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type /text/(html|css|javascript|plain|x(ml|-component))/
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type /application/(javascript|json|xml|x-javascript)/
  FilterChain     COMPRESS
  FilterProtocol  COMPRESS  change=yes;byteranges=no
</IfModule>

<IfModule !mod_filter.c>
  # Legacy versions of Apache
  AddOutputFilterByType DEFLATE text/html text/plain text/css application/json
  AddOutputFilterByType DEFLATE text/javascript application/javascript application/x-javascript
  AddOutputFilterByType DEFLATE text/xml application/xml text/x-component
</IfModule>

# webfonts and svg:
  <FilesMatch "\.(ttf|otf|eot|svg)$" >
    SetOutputFilter DEFLATE
  </FilesMatch>
</IfModule>



# ----------------------------------------------------------------------
# Expires headers (for better cache control)
# ----------------------------------------------------------------------

# these are pretty far-future expires headers
# they assume you control versioning with cachebusting query params like
#   <script src="application.js?20100608">
# additionally, consider that outdated proxies may miscache
#   www.stevesouders.com/blog/2008/08/23/revving-filenames-dont-use-querystring/

# if you don't use filenames to version, lower the css and js to something like
#   "access plus 1 week" or so

<IfModule mod_expires.c>
  ExpiresActive on

# Perhaps better to whitelist expires rules? Perhaps.
  ExpiresDefault                          "access plus 1 month"

# cache.appcache needs re-requests in FF 3.6 (thx Remy ~Introducing HTML5)
  ExpiresByType text/cache-manifest       "access plus 0 seconds"

# your document html
  ExpiresByType text/html                 "access plus 0 seconds"

# data
  ExpiresByType text/xml                  "access plus 0 seconds"
  ExpiresByType application/xml           "access plus 0 seconds"
  ExpiresByType application/json          "access plus 0 seconds"

# rss feed
  ExpiresByType application/rss+xml       "access plus 1 hour"

# favicon (cannot be renamed)
  ExpiresByType image/x-icon              "access plus 1 year"

# media: images, video, audio
  ExpiresByType image/gif                 "access plus 1 month"
  ExpiresByType image/png                 "access plus 1 month"
  ExpiresByType image/jpg                 "access plus 1 month"
  ExpiresByType image/jpeg                "access plus 1 month"
  ExpiresByType video/ogg                 "access plus 3 month"
  ExpiresByType audio/ogg                 "access plus 3 month"
  ExpiresByType video/mp4                 "access plus 3 month"
  ExpiresByType video/webm                "access plus 3 month"

# htc files  (css3pie)
  ExpiresByType text/x-component          "access plus 1 month"

# webfonts
  ExpiresByType font/truetype             "access plus 1 year"
  ExpiresByType font/opentype             "access plus 1 year"
  ExpiresByType application/x-font-woff   "access plus 1 year"
  ExpiresByType image/svg+xml             "access plus 1 year"
  ExpiresByType application/vnd.ms-fontobject "access plus 1 year"

# css and javascript
  ExpiresByType text/css                  "access plus 1 week"
  ExpiresByType application/javascript    "access plus 1 week"
  ExpiresByType text/javascript           "access plus 1 week"

  <IfModule mod_headers.c>
    Header append Cache-Control "public"
  </IfModule>

</IfModule>



# ----------------------------------------------------------------------
# ETag removal
# ----------------------------------------------------------------------

# Since we're sending far-future expires, we don't need ETags for
# static content.
#   developer.yahoo.com/performance/rules.html#etags
FileETag None



# ----------------------------------------------------------------------
# Stop screen flicker in IE on CSS rollovers
# ----------------------------------------------------------------------

# The following directives stop screen flicker in IE on CSS rollovers - in
# combination with the "ExpiresByType" rules for images (see above). If
# needed, un-comment the following rules.

 BrowserMatch "MSIE" brokenvary=1
 BrowserMatch "Mozilla/4.[0-9]{2}" brokenvary=1
 BrowserMatch "Opera" !brokenvary
 SetEnvIf brokenvary 1 force-no-vary



# ----------------------------------------------------------------------
# Cookie setting from iframes
# ----------------------------------------------------------------------

# Allow cookies to be set from iframes (for IE only)
# If needed, uncomment and specify a path or regex in the Location directive

# <IfModule mod_headers.c>
#   <Location />
#     Header set P3P "policyref=\"/w3c/p3p.xml\", CP=\"IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT\""
#   </Location>
# </IfModule>



# ----------------------------------------------------------------------
# Start rewrite engine
# ----------------------------------------------------------------------

# Turning on the rewrite engine is necessary for the following rules and features.

<IfModule mod_rewrite.c>
  RewriteEngine On
</IfModule>


# ----------------------------------------------------------------------
# Disable Trace and Track
# ----------------------------------------------------------------------

# HTTP Trace attack (XST) can be used to return header requests and grab cookies and other information and
# is used along with a cross site scripting attacks (XSS). This can be turned off.

<IfModule mod_rewrite.c>
  RewriteEngine On
  RewriteCond %{REQUEST_METHOD} ^TRACE
  RewriteRule .* - [F]
</IfModule>




# ----------------------------------------------------------------------
# Suppress or force the "www." at the beginning of URLs
# ----------------------------------------------------------------------

# The same content should never be available under two different URLs - especially not with and
# without "www." at the beginning, since this can cause SEO problems (duplicate content).
# That's why you should choose one of the alternatives and redirect the other one.

# By default option 1 (no "www.") is activated. Remember: Shorter URLs are sexier.
# no-www.org/faq.php?q=class_b

# If you rather want to use option 2, just comment out all option 1 lines
# and uncomment option 2.
# IMPORTANT: NEVER USE BOTH RULES AT THE SAME TIME!

# ----------------------------------------------------------------------

# Option 1:
# Rewrite "www.domain.com -> domain.com"

#<IfModule mod_rewrite.c>
#  RewriteCond %{HTTPS} !=on
#  RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
#  RewriteRule ^(.*)$ http://%1/$1 [R=301,L]
#</IfModule>

# ----------------------------------------------------------------------

# Option 2:
# To rewrite "domain.com -> www.domain.com" uncomment the following lines.
# Be aware that the following rule might not be a good idea if you
# use "real" subdomains for certain parts of your website.

 <IfModule mod_rewrite.c>
   RewriteCond %{HTTPS} !=on
   RewriteCond %{HTTP_HOST} !^www\..+$ [NC]
   RewriteCond %{HTTP_HOST} (.+)$ [NC]
   RewriteRule ^(.*)$ http://www.%1/$1 [R=301,L]
 </IfModule>



# ----------------------------------------------------------------------
# Add/remove trailing slash to (non-file) URLs
# ----------------------------------------------------------------------

# Google treats URLs with and without trailing slashes separately.
# Forcing a trailing slash is usually preferred, but all that's really
# important is that one correctly redirects to the other.

# By default option 1 (force trailing slash) is activated.
# http://googlewebmastercentral.blogspot.com/2010/04/to-slash-or-not-to-slash.html
# http://www.alistapart.com/articles/slashforward/
# http://httpd.apache.org/docs/2.0/misc/rewriteguide.html#url Trailing Slash Problem

# ----------------------------------------------------------------------

# Option 1:
# Rewrite "domain.com/foo -> domain.com/foo/"

<IfModule mod_rewrite.c>
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_URI} !(\.[a-zA-Z0-9]{1,5}|/|#(.*))$
  RewriteRule ^(.*)$ /$1/ [R=301,L]
</IfModule>

# ----------------------------------------------------------------------

# Option 2:
# Rewrite "domain.com/foo/ -> domain.com/foo"

#<IfModule mod_rewrite.c>
#  RewriteRule ^(.*)/$ /$1 [R=301,L]
#</IfModule>


# ----------------------------------------------------------------------
# Get a human readable backend-Login URI "/redaktion"
# ----------------------------------------------------------------------

<IfModule mod_rewrite.c>
  RewriteEngine On
  RewriteRule ^redaktion$ /wp-login.php [NC,L]
  RewriteRule ^redaktion/$ /wp-login.php [NC,L]
</IfModule>


# ----------------------------------------------------------------------
# cleanup wordpress' default pathes
# ----------------------------------------------------------------------

<IfModule mod_rewrite.c>

	RewriteCond %{REQUEST_URI} css/(.+)$
	RewriteCond %{REQUEST_URI} !css/(.+)/$
	RewriteRule ^css/(.+)$ /wp-content/themes/cb-std-sys/css/$1 [L]

	RewriteCond %{REQUEST_URI} js/(.+)$
	RewriteCond %{REQUEST_URI} !js/(.+)/$
	RewriteRule ^js/(.+)$ /wp-content/themes/cb-std-sys/js/$1 [L]

	RewriteCond %{REQUEST_URI} img/(.+)$
	RewriteCond %{REQUEST_URI} !img/(.+)/$
	RewriteRule ^img/(.+)$ /wp-content/themes/cb-std-sys/img/$1 [L]

	RewriteCond %{REQUEST_URI} plugins/(.+)$
	RewriteCond %{REQUEST_URI} !plugins/(.+)/$
	RewriteRule ^plugins/(.+)$ /wp-content/plugins/$1 [L]

</IfModule>


# ----------------------------------------------------------------------
# wordpress' house-internal rewrites
# ----------------------------------------------------------------------

# BEGIN WordPress
<IfModule mod_rewrite.c>
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
</IfModule>

# END WordPress


# ----------------------------------------------------------------------
# Wordpress security - file protection
# ----------------------------------------------------------------------

# protect files
<files *.log|wp-config.php|.htaccess>
  order allow,deny
  deny from all
</files>

# ----------------------------------------------------------------------
# Protect from spam comments
# http://www.josiahcole.com/2007/07/11/almost-perfect-htaccess-file-for-wordpress-blogs/
# ----------------------------------------------------------------------

<IfModule mod_rewrite.c>
	RewriteEngine On
	RewriteCond %{REQUEST_METHOD} POST
	RewriteCond %{REQUEST_URI} .wp-comments-post\.php*
	RewriteCond %{HTTP_REFERER} !.*ENTER-THE-LOCAL-URL-HERE.* [OR]
#	RewriteCond %{HTTP_REFERER} !.*ENTER-THE-LIVE-URL-HERE.* [OR]
	RewriteCond %{HTTP_USER_AGENT} ^$
	RewriteRule (.*) ^http://%{REMOTE_ADDR}/$ [R=301,L]
</IfModule>



# ----------------------------------------------------------------------
# Load Images, Videos  and so on from Subdomain
# ----------------------------------------------------------------------

RedirectMatch 301 ^/wp-content/uploads/(.*)$    http://assets.ENTER-THE-LOCAL-URL-HERE/$1
#RedirectMatch 301 ^/wp-content/uploads/(.*)$    http://assets.ENTER-THE-LIVE-URL-HERE/$1

# ----------------------------------------------------------------------
# Redirect old to new URLs
# ----------------------------------------------------------------------

#Redirect 301 /oldslug.htm http://ENTER-THE-LOCAL-URL-HERE/newslug
#Redirect 301 /oldslug.htm http://ENTER-THE-LIVE-URL-HERE/newslug





# ----------------------------------------------------------------------
# Built-in filename-based cache busting
# ----------------------------------------------------------------------

# If you're not using the build script to manage your filename version revving,
# you might want to consider enabling this, which will route requests for
# /css/style.20110203.css to /css/style.css

# To understand why this is important and a better idea than all.css?v1231,
# read: github.com/paulirish/html5-boilerplate/wiki/Version-Control-with-Cachebusting

# Uncomment to enable.
# <IfModule mod_rewrite.c>
#   RewriteCond %{REQUEST_FILENAME} !-f
#   RewriteCond %{REQUEST_FILENAME} !-d
#   RewriteRule ^(.+)\.(\d+)\.(js|css|png|jpg|gif)$ $1.$3 [L]
# </IfModule>



# ----------------------------------------------------------------------
# Prevent SSL cert warnings
# ----------------------------------------------------------------------

# Rewrite secure requests properly to prevent SSL cert warnings, e.g. prevent
# https://www.domain.com when your cert only allows https://secure.domain.com
# Uncomment the following lines to use this feature.

# <IfModule mod_rewrite.c>
#   RewriteCond %{SERVER_PORT} !^443
#   RewriteRule (.*) https://ENTER-THE-LOCAL-URL-HERE.com/$1 [R=301,L]
#   RewriteRule (.*) https://ENTER-THE-LIVE-URL-HERE.com/$1 [R=301,L]
# </IfModule>


# ----------------------------------------------------------------------
# Prevent 404 errors for non-existing redirected folders
# ----------------------------------------------------------------------

# without -MultiViews, Apache will give a 404 for a rewrite if a folder of the same name does not exist
#   e.g. /blog/hello : webmasterworld.com/apache/3808792.htm

Options -MultiViews





# ----------------------------------------------------------------------
# UTF-8 encoding
# ----------------------------------------------------------------------

# use utf-8 encoding for anything served text/plain or text/html
AddDefaultCharset utf-8

# force utf-8 for a number of file formats
AddCharset utf-8 .html .css .js .xml .json .rss



# ----------------------------------------------------------------------
# A little more security
# ----------------------------------------------------------------------


# disable the server signature
ServerSignature Off


# "-Indexes" will have Apache block users from browsing folders without a default document
# Usually you should leave this activated, because you shouldn't allow everybody to surf through
# every folder on your server (which includes rather private places like CMS system folders).
Options -Indexes


# Block access to "hidden" directories whose names begin with a period. This
# includes directories used by version control systems such as Subversion or Git.
<IfModule mod_rewrite.c>
  RewriteRule "(^|/)\." - [F]
</IfModule>


# If your server is not already configured as such, the following directive
# should be uncommented in order to set PHP's register_globals option to OFF.
# This closes a major security hole that is abused by most XSS (cross-site
# scripting) attacks. For more information: http://php.net/register_globals
#
# IF REGISTER_GLOBALS DIRECTIVE CAUSES 500 INTERNAL SERVER ERRORS :
#
# Your server does not allow PHP directives to be set via .htaccess. In that
# case you must make this change in your php.ini file instead. If you are
# using a commercial web host, contact the administrators for assistance in
# doing this. Not all servers allow local php.ini files, and they should
# include all PHP configurations (not just this one), or you will effectively
# reset everything to PHP defaults. Consult www.php.net for more detailed
# information about setting PHP directives.

# php_flag register_globals Off


# ----------------------------------------------------------------------
# custom Apache Error pages
# ----------------------------------------------------------------------

# just for testing
# call with ENTER-THE-LOCAL-URL-HERE/?status=ERRORCODE

<IfModule mod_rewrite.c>
		RewriteEngine On
#		RewriteCond %{QUERY_STRING} ^status=400$
#		RewriteRule ^ - [L,R=400]
#		RewriteCond %{QUERY_STRING} ^status=401$
#		RewriteRule ^ - [L,R=401]
#		RewriteCond %{QUERY_STRING} ^status=402$
#		RewriteRule ^ - [L,R=402]
#		RewriteCond %{QUERY_STRING} ^status=403$
#		RewriteRule ^ - [L,R=403]
#		RewriteCond %{QUERY_STRING} ^status=405$
#		RewriteRule ^ - [L,R=405]
#		RewriteCond %{QUERY_STRING} ^status=406$
#		RewriteRule ^ - [L,R=406]
#		RewriteCond %{QUERY_STRING} ^status=407$
#		RewriteRule ^ - [L,R=407]
#		RewriteCond %{QUERY_STRING} ^status=408$
#		RewriteRule ^ - [L,R=408]
#		RewriteCond %{QUERY_STRING} ^status=409$
#		RewriteRule ^ - [L,R=409]
#		RewriteCond %{QUERY_STRING} ^status=410$
#		RewriteRule ^ - [L,R=410]

#		RewriteCond %{QUERY_STRING} ^status=411$
#		RewriteRule ^ - [L,R=411]
#		RewriteCond %{QUERY_STRING} ^status=412$
#		RewriteRule ^ - [L,R=412]
#		RewriteCond %{QUERY_STRING} ^status=413$
#		RewriteRule ^ - [L,R=413]
#		RewriteCond %{QUERY_STRING} ^status=414$
#		RewriteRule ^ - [L,R=414]
#		RewriteCond %{QUERY_STRING} ^status=415$
#		RewriteRule ^ - [L,R=415]
#		RewriteCond %{QUERY_STRING} ^status=416$
#		RewriteRule ^ - [L,R=416]
#		RewriteCond %{QUERY_STRING} ^status=417$
#		RewriteRule ^ - [L,R=417]

#		RewriteCond %{QUERY_STRING} ^status=422$
#		RewriteRule ^ - [L,R=422]
#		RewriteCond %{QUERY_STRING} ^status=423$
#		RewriteRule ^ - [L,R=423]
#		RewriteCond %{QUERY_STRING} ^status=424$
#		RewriteRule ^ - [L,R=424]
#		RewriteCond %{QUERY_STRING} ^status=425$
#		RewriteRule ^ - [L,R=425]
#		RewriteCond %{QUERY_STRING} ^status=426$
#		RewriteRule ^ - [L,R=426]

#		RewriteCond %{QUERY_STRING} ^status=500$
#		RewriteRule ^ - [L,R=500]
#		RewriteCond %{QUERY_STRING} ^status=501$
#		RewriteRule ^ - [L,R=501]
#		RewriteCond %{QUERY_STRING} ^status=502$
#		RewriteRule ^ - [L,R=502]
#		RewriteCond %{QUERY_STRING} ^status=503$
#		RewriteRule ^ - [L,R=503]
#		RewriteCond %{QUERY_STRING} ^status=504$
#		RewriteRule ^ - [L,R=504]
#		RewriteCond %{QUERY_STRING} ^status=505$
#		RewriteRule ^ - [L,R=505]
#		RewriteCond %{QUERY_STRING} ^status=506$
#		RewriteRule ^ - [L,R=506]
#		RewriteCond %{QUERY_STRING} ^status=507$
#		RewriteRule ^ - [L,R=507]

#		RewriteCond %{QUERY_STRING} ^status=510$
#		RewriteRule ^ - [L,R=510]

</IfModule>

ErrorDocument 400 /wp-content/apache-error-doc.php?e=400
ErrorDocument 401 /wp-content/apache-error-doc.php?e=401
ErrorDocument 402 /wp-content/apache-error-doc.php?e=402
ErrorDocument 403 /wp-content/apache-error-doc.php?e=403
ErrorDocument 404 /index.php?error=404
ErrorDocument 405 /wp-content/apache-error-doc.php?e=405
ErrorDocument 406 /wp-content/apache-error-doc.php?e=406
ErrorDocument 407 /wp-content/apache-error-doc.php?e=407
ErrorDocument 408 /wp-content/apache-error-doc.php?e=408
ErrorDocument 409 /wp-content/apache-error-doc.php?e=409

ErrorDocument 410 /wp-content/apache-error-doc.php?e=410
ErrorDocument 411 /wp-content/apache-error-doc.php?e=411
ErrorDocument 412 /wp-content/apache-error-doc.php?e=412
ErrorDocument 413 /wp-content/apache-error-doc.php?e=413
ErrorDocument 414 /wp-content/apache-error-doc.php?e=414
ErrorDocument 415 /wp-content/apache-error-doc.php?e=415
ErrorDocument 416 /wp-content/apache-error-doc.php?e=416
ErrorDocument 417 /wp-content/apache-error-doc.php?e=417

ErrorDocument 422 /wp-content/apache-error-doc.php?e=422
ErrorDocument 423 /wp-content/apache-error-doc.php?e=423
ErrorDocument 424 /wp-content/apache-error-doc.php?e=424
ErrorDocument 425 /wp-content/apache-error-doc.php?e=425
ErrorDocument 426 /wp-content/apache-error-doc.php?e=426

ErrorDocument 500 /wp-content/apache-error-doc.php?e=500
ErrorDocument 501 /wp-content/apache-error-doc.php?e=501
ErrorDocument 502 /wp-content/apache-error-doc.php?e=502
ErrorDocument 503 /wp-content/apache-error-doc.php?e=503
ErrorDocument 504 /wp-content/apache-error-doc.php?e=504
ErrorDocument 505 /wp-content/apache-error-doc.php?e=505
ErrorDocument 506 /wp-content/apache-error-doc.php?e=506
ErrorDocument 507 /wp-content/apache-error-doc.php?e=507

ErrorDocument 510 /wp-content/apache-error-doc.php?e=510

